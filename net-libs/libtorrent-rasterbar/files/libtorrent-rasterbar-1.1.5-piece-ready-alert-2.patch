diff --git a/include/libtorrent/alert_manager.hpp b/include/libtorrent/alert_manager.hpp
index 017240264..3800941b3 100644
--- a/include/libtorrent/alert_manager.hpp
+++ b/include/libtorrent/alert_manager.hpp
@@ -94,7 +94,12 @@ namespace libtorrent {
 			// for high priority alerts, double the upper limit
 			if (m_alerts[m_generation].size() >= m_queue_size_limit
 				* (1 + T::priority))
+			{
+				aux::stack_allocator alloc;
+				T alert(alloc, std::forward<Args>(args)...);
+				maybe_notify(&alert, lock);
 				return;
+			}
 
 			T alert(m_allocations[m_generation], std::forward<Args>(args)...);
 			m_alerts[m_generation].push_back(alert);
@@ -116,12 +121,6 @@ namespace libtorrent {
 		template <class T>
 		bool should_post() const
 		{
-			mutex::scoped_lock lock(m_mutex);
-			if (m_alerts[m_generation].size() >= m_queue_size_limit
-				* (1 + T::priority))
-			{
-				return false;
-			}
 			return (m_alert_mask & T::static_category) != 0;
 		}
 
diff --git a/include/libtorrent/alert_types.hpp b/include/libtorrent/alert_types.hpp
index b4bc43410..4657f2431 100644
--- a/include/libtorrent/alert_types.hpp
+++ b/include/libtorrent/alert_types.hpp
@@ -907,6 +907,7 @@ namespace libtorrent
 
 		TORRENT_DEFINE_ALERT(unwanted_block_alert, 32)
 
+		static const int static_category = alert::progress_notification;
 		virtual std::string message() const TORRENT_OVERRIDE;
 
 		int block_index;
